name: Terraform CI For Global Resources

on:
  push:
    branches:
      - main
    tags-ignore:
      - '*'
    paths:
      - terraform/global/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/global/**

jobs:
  execute-terraform-plan:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Authenticate with Azure
        uses: azure/login@v2.1.1
        with:
          creds: ${{ secrets.ARM_CREDENTIALS }}
      - name: Install azure cli
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: az account show
      - name: Setup Terraform and Terragrunt
        uses: gruntwork-io/terragrunt-action@v2.1.4
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        with:
          tf_version: ${{ vars.TERRAFORM_VERSION }}
          tg_version: ${{ vars.TERRAGRUNT_VERSION }}
          tg_command: init
          tg_dir: terraform/global
      - name: Execute terragrunt plan
        working-directory: terraform/global
        run: |
          terragrunt plan -no-color 2>&1

  execute-terraform-apply:
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Authenticate with Azure
        uses: azure/login@v2.1.1
        with:
          creds: ${{ secrets.ARM_CREDENTIALS }}
      - name: Setup Terraform and Terragrunt
        uses: gruntwork-io/terragrunt-action@v2.1.4
        with:
          tf_version: ${{ vars.TERRAFORM_VERSION }}
          tg_version: ${{ vars.TERRAGRUNT_VERSION }}
      - name: Setup Terraform and Terragrunt
        uses: gruntwork-io/terragrunt-action@v2.1.4
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          tf_version: ${{ vars.TERRAFORM_VERSION }}
          tg_version: ${{ vars.TERRAGRUNT_VERSION }}
          tg_command: apply
          tg_dir: terraform/global
          tg_add_approve: 1
